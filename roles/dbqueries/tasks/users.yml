---
- name: Run MySQL query - Count Business Admin Users
  shell: |
    mysql -h 172.16.10.49 -u SupportLead -P 6055 -pQw12s#fdga MobifinEliteTransactionEngine_QCell -e "SELECT UserAccountCategoryTypeId , COUNT(*) FROM TBLUserAccount GROUP BY UserAccountCategoryTypeId" | sed 's/\t/,/g'  | awk -F',' 'NR==2 {print $2}'
  register: bauser_result

#- name: Print output in file
#  lineinfile:
#    path: {{ DIRECTORY }}/{{ PROJECT }}_audit_report_db_{{ lookup('pipe', 'date +%d%m%Y') }}.txt
#    line: "Count of Business Admin users is {{ bauser_result.stdout }}"
#    create: yes
#  delegate_to: localhost

- name: Print output in file
  lineinfile:
    path: "{{ DIRECTORY }}/{{ PROJECT }}_Audit_Report_Metrics_{{ lookup('pipe', 'date +%d%m%Y') }}.csv"
    line: "Count of Business Admin users,{{ bauser_result.stdout }}"
    create: yes
    insertafter: EOF
  delegate_to: localhost

- name: Run MySQL query - Count System Users
  shell: |
    mysql -h 172.16.10.49 -u SupportLead -P 6055 -pQw12s#fdga MobifinEliteTransactionEngine_QCell -e "SELECT UserAccountCategoryTypeId , COUNT(*) FROM TBLUserAccount GROUP BY UserAccountCategoryTypeId" | sed 's/\t/,/g'  | awk -F',' 'NR==3 {print $2}'
  register: suser_result

#- name: Print output in file
#  lineinfile:
#    path: {{ DIRECTORY }}/{{ PROJECT }}_audit_report_db_{{ lookup('pipe', 'date +%d%m%Y') }}.txt
#    line: "Count of System users is {{ suser_result.stdout }}"
#    create: yes
#  delegate_to: localhost

- name: Print output in file
  lineinfile:
    path: "{{ DIRECTORY }}/{{ PROJECT }}_Audit_Report_Metrics_{{ lookup('pipe', 'date +%d%m%Y') }}.csv"
    line: "Count of System users,{{ suser_result.stdout }}"
    create: yes
    insertafter: EOF
  delegate_to: localhost

- name: Run MySQL query - Count End Users
  shell: |
    mysql -h 172.16.10.49 -u SupportLead -P 6055 -pQw12s#fdga MobifinEliteTransactionEngine_QCell -e "SELECT UserAccountCategoryTypeId , COUNT(*) FROM TBLUserAccount GROUP BY UserAccountCategoryTypeId" | sed 's/\t/,/g'  | awk -F',' 'NR==4 {print $2}'
  register: euser_result

#- name: Print output in file
#  lineinfile:
#    path: {{ DIRECTORY }}/{{ PROJECT }}_audit_report_db_{{ lookup('pipe', 'date +%d%m%Y') }}.txt
#    line: "Count of End users is {{ euser_result.stdout }}"
#    create: yes
#  delegate_to: localhost

- name: Print output in file
  lineinfile:
    path: "{{ DIRECTORY }}/{{ PROJECT }}_Audit_Report_Metrics_{{ lookup('pipe', 'date +%d%m%Y') }}.csv"
    line: "Count of End users,{{ euser_result.stdout }}"
    create: yes
    insertafter: EOF
  delegate_to: localhost
