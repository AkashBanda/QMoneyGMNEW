---
- name: Add blank row in CSV file
  lineinfile:
    path: "{{ DIRECTORY }}/{{ PROJECT }}_Audit_Report_Metrics_{{ lookup('pipe', 'date +%d%m%Y') }}.csv"
    line: ""
    create: yes
    insertafter: EOF
  delegate_to: localhost
  run_once: true

- name: Add blank row in CSV file
  lineinfile:
    path: "{{ DIRECTORY }}/{{ PROJECT }}_Audit_Report_Metrics_{{ lookup('pipe', 'date +%d%m%Y') }}.csv"
    line: Domain,Expiry_Date
    create: yes
    insertafter: EOF
  delegate_to: localhost
  run_once: true

- name: check ssl certificate expiry date
  shell: |
    echo | openssl s_client -servername {{ item.subdomain }} -connect {{ item.subdomain }}:443 2>/dev/null | openssl x509 -noout -dates | grep notAfter | sed 's/notAfter=//'
  register: ssl_output
  loop: "{{ subdomains }}"
  when: item.name == PROJECT

- name: convert into yyyy-mm-dd
  shell: date -d "{{ ssl_output.results | selectattr('stdout', 'defined') | map(attribute='stdout') | first }}" +%F
  register: command_output

#- name: print output in file
#  copy:
#    content: "Expiry Date for {{ item.subdomain }} is {{ command_output.stdout }}"
#    dest: "{{ DIRECTORY }}/{{ PROJECT }}_ssl_certificate_expiry_{{ lookup('pipe', 'date +%d%m%Y') }}.txt"
#  loop: "{{ subdomains }}"
#  when: item.name == PROJECT


- name: print output in CSV
  lineinfile:
    path: "{{ DIRECTORY }}/{{ PROJECT }}_Audit_Report_Metrics_{{ lookup('pipe', 'date +%d%m%Y') }}.csv"
    line: "{{ item.subdomain }},{{ command_output.stdout }}"
    create: yes
    insertafter: EOF
  loop: "{{ subdomains }}"
  when: item.name == PROJECT
